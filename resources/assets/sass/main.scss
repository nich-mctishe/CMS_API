/* vars */

/* colours */
$background-colour: #F0F0F0;
$main-colour: #990000;
$submain-colour: #009900;
$supporting-submain-colour-1: #006600;
$supporting-submain-colour-2: #339933;
$supporting-submain-colour-3: #669933;

$main-text-colour: #EEEEEE;
$backup-text-colour: $main-colour;
$extra-text-colour: black;

$colours: $submain-colour, $supporting-submain-colour-1, $supporting-submain-colour-2,
$supporting-submain-colour-3, $submain-colour, $supporting-submain-colour-1, $supporting-submain-colour-2;

/* fonts */

@font-face {
  font-family:Reswysokr;
  src: url("/assets/typeface/reswysokr-webfont.eot");
  src: local("â˜º"),
  url("/assets/typeface/reswysokr-webfont.woff") format("woff"),
  url("/assets/typeface/reswysokr-webfont.otf") format("opentype"),
  url("/assets/typeface/reswysokr-webfont.svg#reswysokr-webfont") format("svg");
}

$head-font-family: Reswysokr, serif;
$sub-font-family: corbel, helvetica, arial, sans-serif;

/* font sizes */

$h1: 3em;
$h1-large: 5em;
$h1-mobile: 2em;
$h2: 1.7em;
$h2-large: 2em;
$h3:18px;
$p: 14px;
$ul-mobile: 1.5em;
$ul-desktop: 1.3em;

/* lenghts */
$main-circle-size: 475px;
$small-circle-size: 100px;

/* mixins */

@mixin mob-a-styles ($size, $colour) {
  font-size: $size;
  color: $colour;
  text-decoration: none;
}

@mixin transition-handler($element, $length, $easing-type) {
  -webkit-transition: $element $length $easing-type;
  -moz-transition: $element $length $easing-type;
  -o-transition: $element $length $easing-type;
  transition: $element $length $easing-type;
}

@mixin handle-translateX-transformation($value) {
  -webkit-transform: translateX($value);
  -moz-transform: translateX($value);
  -o-transform: translateX($value);
  -ms-transform: translateX($value);
  transform: translateX($value);
}

@mixin handle-rotation-transformation($value) {
  -webkit-transform: rotate($value);
  -moz-transform: rotate($value);
  -o-transform: rotate($value);
  -ms-transform: rotate($value);
  transform: rotate($value);
}
/* main sass */

body, html {
  background: $background-colour;
  margin: 0;
  padding: 0;
}
nav {
  font-family: $head-font-family;
  float: left;

  &.mobile {
    position: fixed;
    width: 100%;
    padding: 0;
    margin: 0;

    > section.mast {
      background: $main-colour;
      padding: 2%;
      width: 100%;
      float: left;

      > h1 {
        width: 75%;
        float: left;
        margin: 0;
        > a {
          @include mob-a-styles($h1-mobile, $main-text-colour);
        }
      }
      > span.menu {
        width: 25%;
        position: relative;
        padding-left: 4.25em;

        &:before {
          content: "";
          margin: 0.3em 0 0 1.6em;
          position: absolute;
          left: 0;
          top: 0;
          width: 3em;
          height: 0.5em;
          background: $main-text-colour;
          box-shadow: 0 0.75em 0 0 $main-text-colour,
          0 1.5em 0 0 $main-text-colour;
        }
      }
    }
    >div.overlay {
      visibility: hidden;
      position: fixed;
      top: 0;
      bottom: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      background: $extra-text-colour;
      z-index: 100;
      &.active {
        visibility: visible;
        opacity: 0.6;
        z-index: 100;
      }
      &.disabled {
        visibility: visible;
        opacity: 0;
        z-index: -100;
        width: 0;
        height: 0;
      }
      &.active, &.disabled {@include transition-handler(opacity, 0.25s, linear);}
    }
    &.side-menu {
      width: 50%;
      @include handle-translateX-transformation(-100%);
      height: 100%;
      position: fixed;
      z-index: 200;
      background-color: $submain-colour;
      opacity: 0.95;
      &.active {
        @include handle-translateX-transformation(0%);
        @include transition-handler(transform, 0.3s, linear);
      }
      &.disabled {
        @include handle-translateX-transformation(-100%);
        @include transition-handler(transform, 0.3s, linear);
      }
    }
    > ul.menu {
      width: 100%;
      float: left;
      list-style-type: none;
      margin: 0;
      padding: 0;
      > li {
        margin: 0;
        padding: 2% 0;
        width: 100%;
        float: left;
        text-align: center;
        > a {
          display: block;
          @include mob-a-styles($ul-mobile, $main-text-colour);
        }
      }
    }
    > button {
      width: 100%;
      font-size: $ul-mobile;
      font-family: $head-font-family;
      color: $main-text-colour;
      margin: 0;
      padding: 2% 0;
      float: left;
      border: 0;
      background: $main-colour;
      &::-moz-focus-inner {
        border: 0;
        padding: 0;
      }
    }
    @for $i from 1 through length($colours) {
      li:nth-child(#{length($colours)}n+#{$i}) {
        background: nth($colours, $i)
      }
    }
    > li:has(a:active) {
      background: $main-colour;
    }
  }

  &.desktop {
    width: 600px;
    height: 720px;
    margin: 10px 0 0 0;
    @include handle-translateX-transformation(-100%);

    &.initial {
      @include handle-translateX-transformation(-14%);
      @include transition-handler(transform, 0.75s, ease-out);
    }
    >.mainCircle {
      position: relative;
      width: $main-circle-size;
      height: $main-circle-size;
      margin: 121px 0;
      background: $main-colour;
      border-radius: ($main-circle-size / 2);
      transition: background 0.2s ease-out;
      &:hover {
        background: $supporting-submain-colour-3;
        @include transition-handler(background, 0.2s, ease-in);
      }
      > a {
        text-decoration: none;
        > h1, h2 {
          padding:0 0 0 28%;
          margin: 0;
          font-weight: 100;
        }
        > h1 {
          font-size: $h1-large;
          margin-top: -5.2%;
        }
        > h2 {
          font-size: $h2;
          margin: -4% 0 0 0.7%;
        }
        >h1:first-of-type {
          padding-top: 25%;
          margin-top: 0;
        }
      }
    }
    h1,h2,a {
      color: $main-text-colour;
    }
    >.mainMenu {
      list-style-type: none;
      position: absolute;
      top: 300px;
      left: 207px;
      padding: 0;
      @include handle-rotation-transformation(-180deg);

      &.initial {
        @include handle-rotation-transformation(0deg);
        @include transition-handler(transform, 0.9s, ease-out)
      }
      >li {
        position: absolute;
        width: $small-circle-size;
        height: $small-circle-size;
        border-radius: 50px;

        $rot: 0;
        $circles: 7;
        $final-angle: 180;
        $increment: $final-angle / $circles;
        @for $i from 1 to $circles+1 {
          &:nth-of-type(#{$i}) {
            @if($i < (4)) {
              -webkit-transform:
                rotate(#{$rot}deg)       /* Rotate the axis */
                translateY(-($main-circle-size/2) - 20 - ($small-circle-size/2))
                translateX(($rot / 100) * 100% ) /* Move the item from the center */
                rotate(-#{$rot}deg);     /* Rotate the item back to its default position */
              -moz-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - 20 - ($small-circle-size/2))
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -o-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - 20 - ($small-circle-size/2))
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -ms-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - 20 - ($small-circle-size/2))
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - 20 - ($small-circle-size/2))
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
            } @elseif($i > (3) and $i < (6)) {
              -webkit-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 10)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -moz-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 10)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -o-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 10)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -ms-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 10)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 10)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
            } @else {
              -webkit-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 35)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -moz-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 35)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -o-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 35)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              -ms-transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 35)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
              transform:
                rotate(#{$rot}deg)
                translateY(-($main-circle-size/2) - ($small-circle-size/2) + 35)
                translateX(($rot / 100) * 100% )
                rotate(-#{$rot}deg);
            }
          }

          $rot: $rot + $increment; /* Increments the $rot variable for next item */
        }
        >a {
          display: block;
          text-decoration: none;
          text-align: center;
          font-size: $ul-desktop;
          font-weight: 100;
          padding-top: 38%;
          &.double-line {
            padding-top: 21%;
          }
        }
      }
      @for $i from 1 through length($colours) {
        li:nth-child(#{length($colours)}n+#{$i}) {
          background: nth($colours, $i);
          @include transition-handler(background, 0.2s, ease-out);
        }
      }
      >li:hover {
        background: $main-colour;
        @include transition-handler(background, 0.2s, ease-in);
      }
    }
  }
}
section.content {
  float: left;
  width: 96%;

  @media screen and (max-width: 600px) {
    margin: 16% 2% 2% 5%;

    form {
      font-family: $head-font-family;
      width: 100%;
      >input {
        margin: 2% 0;
        float: left;
        width: 98%;
        height: 25px;
      }
      >input[type=submit] {
        background: $submain-colour;
        color: $main-text-colour;
        border: none;
        width: 100%;
      }
    }
  }

  form {
    float: left;
    overflow: hidden;
    max-height: 0;
    &.active {
      max-height: 300px;
      @include transition-handler(max-height, 0.25s, linear);
    }
    &.disabled {
      max-height: 0;
      @include transition-handler(max-height, 0.25s, linear);
    }

    > input {
      float: left;

      &.hide {
        display: none;
      }
    }
  }

  button {
    margin: 4% 0 0 0;
    padding: 0 2%;
    background: $main-colour;
    font-family: $head-font-family;
    color: $main-text-colour;
    font-size: $h1-mobile;
    border: none;
    outline: none;
  }

  ul {
    font-family: $head-font-family;
    list-style-type: none;
  }

  > section.about {
    float: left;
    @media screen and (min-width: 1000px) {
      float: left;
      max-width: 600px;
      width: 40%;
    }
    @media screen and (max-width: 1000px) {
      width: 90%;
      padding: 0;
      margin: 2% 5%;
    }
    @media screen and (max-width: 600px) {
      width: 96%;
      padding: 0;
      margin: 0;
    }
    > p {
      font-family: $sub-font-family;
      font-weight: 200;
      color: $extra-text-colour;
      font-size: $p;
    }
  }
}

section.content.skills {
  margin: 0 auto;

  > ul {
    padding: 0;
    width: 100%;
    float: left;
    > li {
      color: $extra-text-colour;
      font-size: $h3;

      > ul.sublist {
        padding: 0 0 0 5%;
        margin: 0;
        list-style-type: disc;
        font-family: $sub-font-family;
        width: 100%;
        float: left;
        > li {
          margin: 1% 0;
          width: 100%;
          float: left;
          >h3 {
            width: 100%;
            float: right;
            font-size: $h3;
            margin: 0;
            &.short {
              width: 75%;
              float: right;
              margin: -6% 0 0 0;
            }
            > span {
              font-size: $h3;
              font-weight: 200;
            }
          }
        }
      }
      > h3 {
        font-size: $ul-mobile;
        color: $main-colour;
        padding: 0;
        margin: 0;
      }
      h3.short {
        width: 75%;
        float: right;
      }
      ul.toolbar {
        list-style-type: none;
        cursor: pointer;
        float: right;
        width: 25%;
        margin: 0;
        padding: 0;
        > li {
          float: left;
          margin: 0 0 0 10%;
          &:first-of-type {
            margin: 0;
          }
        }
      }
    }
  }
}